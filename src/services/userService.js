// ==========================================================================
// USER SERVICE - SERVI√áOS DE GERENCIAMENTO DE USU√ÅRIO
// ==========================================================================
// Prop√≥sito: Encapsular opera√ß√µes de perfil e configura√ß√µes do usu√°rio
// Origem: P√°ginas de perfil, configura√ß√µes, componentes de usu√°rio
// Destino: API REST http://localhost:3000/api/users/*
// Efeitos: Gerenciamento completo do perfil do usu√°rio

import { api } from 'boot/axios'
import { handleApiResponse } from 'src/utils/apiResponse'

/**
 * Servi√ßos de usu√°rio que encapsulam opera√ß√µes de perfil e configura√ß√µes
 * Inclui atualiza√ß√£o de dados, mudan√ßa de senha e configura√ß√µes
 */
export const userService = {

  // ==========================================================================
  // ATUALIZAR PERFIL - PUT /users/profile
  // ==========================================================================
  /**
   * Atualiza dados do perfil do usu√°rio
   * Origem: P√°gina de perfil, formul√°rio de edi√ß√£o
   * Destino: PUT /users/profile
   * Retorna: Dados atualizados do usu√°rio
   * Efeitos: Perfil modificado, poss√≠vel atualiza√ß√£o do token
   */
  async updateProfile(profileData) {
    console.log('üë§ Atualizando perfil do usu√°rio:', {
      name: profileData.name,
      email: profileData.email,
      company: profileData.company
    })
    
    const response = await api.put('/users/profile', {
      name: profileData.name,
      email: profileData.email,
      company: profileData.company || null,
      phone: profileData.phone || null
    })
    
    console.log('‚úÖ Perfil atualizado com sucesso')
    return response.data
  },

  // ==========================================================================
  // ALTERAR SENHA - PUT /users/password
  // ==========================================================================
  /**
   * Altera a senha do usu√°rio
   * Origem: P√°gina de configura√ß√µes, formul√°rio de senha
   * Destino: PUT /users/password
   * Retorna: Confirma√ß√£o da altera√ß√£o
   * Efeitos: Nova senha definida, poss√≠vel logout for√ßado
   */
  async changePassword(passwordData) {
    console.log('üîí Alterando senha do usu√°rio')
    
    const response = await api.put('/users/password', {
      currentPassword: passwordData.currentPassword,
      newPassword: passwordData.newPassword
    })
    
    console.log('‚úÖ Senha alterada com sucesso')
    return response.data
  },

  // ==========================================================================
  // BUSCAR PERFIL ATUAL - GET /users/profile
  // ==========================================================================
  /**
   * Busca dados completos do perfil atual
   * Origem: Carregamento da p√°gina de perfil, refresh de dados
   * Destino: GET /users/profile
   * Retorna: Dados completos do usu√°rio atual
   * Efeitos: Dados atualizados para formul√°rios e exibi√ß√£o
   */
  async getCurrentProfile() {
    console.log('üìã Buscando perfil atual do usu√°rio')
    
    const response = await api.get('/users/profile')
    
    console.log('‚úÖ Perfil obtido:', {
      id: response.data.id,
      name: response.data.name,
      email: response.data.email,
      plan: response.data.plan
    })
    
    return response.data
  },

  // ==========================================================================
  // DELETAR CONTA - DELETE /users/account
  // ==========================================================================
  /**
   * Deleta permanentemente a conta do usu√°rio
   * Origem: P√°gina de configura√ß√µes, confirma√ß√£o de exclus√£o
   * Destino: DELETE /users/account
   * Retorna: Confirma√ß√£o da exclus√£o
   * Efeitos: Conta removida, logout autom√°tico, dados apagados
   */
  async deleteAccount(confirmation) {
    console.log('‚ö†Ô∏è Deletando conta do usu√°rio - A√á√ÉO IRREVERS√çVEL')
    
    const response = await api.delete('/users/account', {
      data: { confirmation: confirmation }
    })
    
    console.log('‚úÖ Conta deletada permanentemente')
    return response.data
  },

  // ==========================================================================
  // CONFIGURA√á√ïES DO SISTEMA - GET/PUT /users/settings
  // ==========================================================================
  /**
   * Busca configura√ß√µes personalizadas do usu√°rio
   * Origem: P√°gina de configura√ß√µes, inicializa√ß√£o do app
   * Destino: GET /users/settings
   * Retorna: Objeto com configura√ß√µes do usu√°rio
   * Efeitos: Aplica√ß√£o de configura√ß√µes personalizadas
   */
  async getUserSettings() {
    console.log('‚öôÔ∏è Buscando configura√ß√µes do usu√°rio')
    
    const response = await api.get('/users/settings')
    
    console.log('‚úÖ Configura√ß√µes obtidas:', {
      theme: response.data.theme,
      currency: response.data.currency,
      notifications: response.data.notifications
    })
    
    return response.data
  },

  /**
   * Atualiza configura√ß√µes personalizadas do usu√°rio
   * Origem: P√°gina de configura√ß√µes, formul√°rio de prefer√™ncias
   * Destino: PUT /users/settings
   * Retorna: Configura√ß√µes atualizadas
   * Efeitos: Prefer√™ncias salvas e aplicadas
   */
  async updateUserSettings(settings) {
    console.log('‚öôÔ∏è Atualizando configura√ß√µes do usu√°rio:', settings)
    
    const response = await api.put('/users/settings', {
      theme: settings.theme,           // 'light' | 'dark' | 'auto'
      currency: settings.currency,     // 'BRL' | 'USD' | 'EUR'
      language: settings.language,     // 'pt-BR' | 'en-US' | 'es-ES'
      notifications: {
        email: settings.notifications?.email || false,
        push: settings.notifications?.push || false,
        reports: settings.notifications?.reports || false
      },
      dateFormat: settings.dateFormat, // 'DD/MM/YYYY' | 'MM/DD/YYYY'
      numberFormat: settings.numberFormat // 'pt-BR' | 'en-US'
    })
    
    console.log('‚úÖ Configura√ß√µes atualizadas com sucesso')
    return response.data
  },

  // ==========================================================================
  // UPLOAD DE AVATAR - POST /users/avatar
  // ==========================================================================
  /**
   * Faz upload da foto de perfil do usu√°rio
   * Origem: P√°gina de perfil, componente de upload de imagem
   * Destino: POST /users/avatar
   * Retorna: URL da nova imagem de perfil
   * Efeitos: Avatar atualizado no perfil
   */
  async uploadAvatar(file) {
    console.log('üì∑ Fazendo upload do avatar:', file.name)
    
    const formData = new FormData()
    formData.append('avatar', file)
    
    const response = await api.post('/users/avatar', formData, {
      headers: {
        'Content-Type': 'multipart/form-data'
      }
    })
    
    console.log('‚úÖ Avatar atualizado:', response.data.avatarUrl)
    return response.data.avatarUrl
  },

  // ==========================================================================
  // REMOVER AVATAR - DELETE /users/avatar
  // ==========================================================================
  /**
   * Remove a foto de perfil do usu√°rio
   * Origem: P√°gina de perfil, a√ß√£o de remo√ß√£o
   * Destino: DELETE /users/avatar
   * Retorna: Confirma√ß√£o da remo√ß√£o
   * Efeitos: Avatar removido, volta ao padr√£o
   */
  async removeAvatar() {
    console.log('üóëÔ∏è Removendo avatar do usu√°rio')
    
    const response = await api.delete('/users/avatar')
    
    console.log('‚úÖ Avatar removido com sucesso')
    return response.data
  },

  // ==========================================================================
  // ALTERAR PLANO - PUT /users/plan
  // ==========================================================================
  /**
   * Altera o plano de assinatura do usu√°rio
   * Origem: P√°gina de planos, processo de upgrade/downgrade
   * Destino: PUT /users/plan
   * Retorna: Dados do novo plano
   * Efeitos: Plano alterado, recursos atualizados
   */
  async changePlan(planId) {
    console.log('üí≥ Alterando plano do usu√°rio:', {
      planId: planId
    })
    
    const response = await api.put('/users/plan', {
      planId: planId
    })
    
    const apiData = handleApiResponse(response, 'changePlan')
    
    console.log('‚úÖ Plano alterado com sucesso')
    return apiData
  },

  // ==========================================================================
  // ESTAT√çSTICAS DO USU√ÅRIO - GET /users/stats
  // ==========================================================================
  /**
   * Busca estat√≠sticas de uso da plataforma pelo usu√°rio
   * Origem: Dashboard, p√°gina de perfil
   * Destino: GET /users/stats
   * Retorna: Dados de uso e estat√≠sticas pessoais
   * Efeitos: Exibi√ß√£o de m√©tricas de atividade
   */
  async getUserStats() {
    console.log('üìà Buscando estat√≠sticas do usu√°rio')
    
    const response = await api.get('/users/stats')
    
    console.log('‚úÖ Estat√≠sticas obtidas:', {
      transactionsCount: response.data.transactionsCount,
      joinDate: response.data.joinDate,
      lastActivity: response.data.lastActivity
    })
    
    return response.data
  }
}